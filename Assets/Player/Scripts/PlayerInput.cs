//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Player/Scripts/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""d641e417-83b1-4409-a2bb-9e80c2dc29ed"",
            ""actions"": [
                {
                    ""name"": ""BodyMovement"",
                    ""type"": ""Button"",
                    ""id"": ""f131d0ee-30e9-4755-9a79-6e048d4a6030"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a4471030-3f22-4997-a219-c31f00c7f58d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""f611b74a-6e7a-4cde-bbe7-aaf688579068"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""bbedff34-0b48-43fe-8ee2-8c8daf20904f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BodyMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e06017dc-4c80-465c-8c7d-26537c04c366"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BodyMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""44adc803-e9c4-496b-bac5-c3ef3f32ca62"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BodyMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e9b8f34a-8d17-4a0f-85f1-a47ff97316eb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BodyMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""abb3e2d2-b7bc-4ca4-9dd4-90421e7f837c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BodyMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7ea15b4d-4464-4d37-a107-522bc5f48dd1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""460da91f-350f-4222-b6ba-922feb59d888"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""General"",
            ""id"": ""377d5ebb-312e-42ec-8dad-ed9cdec2dc20"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""b3b5a6ad-0a41-40c6-af44-293f02fd5b73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchMode"",
                    ""type"": ""Button"",
                    ""id"": ""d7d72ca7-7b8e-48a9-8c3b-d8b72f8ca8f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleHUD"",
                    ""type"": ""Button"",
                    ""id"": ""f0214fc6-ebcb-47d5-9377-ef2ea9cd3932"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6185f554-b8c0-44e9-80ba-508b20339b14"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2ea8fe4-fd8a-4441-9e27-e3cdd428b6ec"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d2cce8f-0898-4b3e-a229-a01c2d45b51b"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHUD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""4916acf4-153e-4299-b515-72de335aa131"",
            ""actions"": [
                {
                    ""name"": ""UIConfirm"",
                    ""type"": ""Button"",
                    ""id"": ""8b62cb20-a5ac-498e-9443-f35d20bae68f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UINavigation"",
                    ""type"": ""Button"",
                    ""id"": ""d2773609-41de-4ef3-a16f-7c1bc33bd653"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUpgraders"",
                    ""type"": ""Button"",
                    ""id"": ""b0184548-d078-4860-8b77-61d9f1ad7ce4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""40fb68b9-d601-4195-86b0-beeba0d10cee"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIConfirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""UINavigation"",
                    ""id"": ""45209baf-6ebf-4e15-a1b6-f950468c407a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1165111-f84b-4ac0-8d58-5fcdbe432187"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b0322a89-e5e2-4eb9-b7c7-3769b9668d51"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2a62c6d3-1e33-4b4e-9cf3-57e05b0543c8"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4675e540-195e-4985-991c-fc4ca7641cf5"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""UINavigation"",
                    ""id"": ""68b22d02-61dc-4ebd-9990-4954dd85398d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b56f4d53-68b0-419d-95ff-a77b0cde0c55"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""89a84e5a-326d-4a1d-81e8-ae33deaf6104"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""52008d52-6755-4854-8167-c69737d82312"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""70c6c6d4-6354-45f7-9e83-c50a064c9c09"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e7640aec-2756-48eb-8a8b-b72947adca02"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleUpgraders"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_BodyMovement = m_Movement.FindAction("BodyMovement", throwIfNotFound: true);
        m_Movement_Jump = m_Movement.FindAction("Jump", throwIfNotFound: true);
        m_Movement_MousePosition = m_Movement.FindAction("MousePosition", throwIfNotFound: true);
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_Fire = m_General.FindAction("Fire", throwIfNotFound: true);
        m_General_SwitchMode = m_General.FindAction("SwitchMode", throwIfNotFound: true);
        m_General_ToggleHUD = m_General.FindAction("ToggleHUD", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_UIConfirm = m_UI.FindAction("UIConfirm", throwIfNotFound: true);
        m_UI_UINavigation = m_UI.FindAction("UINavigation", throwIfNotFound: true);
        m_UI_ToggleUpgraders = m_UI.FindAction("ToggleUpgraders", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_BodyMovement;
    private readonly InputAction m_Movement_Jump;
    private readonly InputAction m_Movement_MousePosition;
    public struct MovementActions
    {
        private @PlayerInput m_Wrapper;
        public MovementActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @BodyMovement => m_Wrapper.m_Movement_BodyMovement;
        public InputAction @Jump => m_Wrapper.m_Movement_Jump;
        public InputAction @MousePosition => m_Wrapper.m_Movement_MousePosition;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @BodyMovement.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnBodyMovement;
                @BodyMovement.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnBodyMovement;
                @BodyMovement.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnBodyMovement;
                @Jump.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @MousePosition.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMousePosition;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @BodyMovement.started += instance.OnBodyMovement;
                @BodyMovement.performed += instance.OnBodyMovement;
                @BodyMovement.canceled += instance.OnBodyMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // General
    private readonly InputActionMap m_General;
    private IGeneralActions m_GeneralActionsCallbackInterface;
    private readonly InputAction m_General_Fire;
    private readonly InputAction m_General_SwitchMode;
    private readonly InputAction m_General_ToggleHUD;
    public struct GeneralActions
    {
        private @PlayerInput m_Wrapper;
        public GeneralActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_General_Fire;
        public InputAction @SwitchMode => m_Wrapper.m_General_SwitchMode;
        public InputAction @ToggleHUD => m_Wrapper.m_General_ToggleHUD;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterface != null)
            {
                @Fire.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnFire;
                @SwitchMode.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnSwitchMode;
                @SwitchMode.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnSwitchMode;
                @SwitchMode.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnSwitchMode;
                @ToggleHUD.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleHUD;
                @ToggleHUD.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleHUD;
                @ToggleHUD.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnToggleHUD;
            }
            m_Wrapper.m_GeneralActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @SwitchMode.started += instance.OnSwitchMode;
                @SwitchMode.performed += instance.OnSwitchMode;
                @SwitchMode.canceled += instance.OnSwitchMode;
                @ToggleHUD.started += instance.OnToggleHUD;
                @ToggleHUD.performed += instance.OnToggleHUD;
                @ToggleHUD.canceled += instance.OnToggleHUD;
            }
        }
    }
    public GeneralActions @General => new GeneralActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_UIConfirm;
    private readonly InputAction m_UI_UINavigation;
    private readonly InputAction m_UI_ToggleUpgraders;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @UIConfirm => m_Wrapper.m_UI_UIConfirm;
        public InputAction @UINavigation => m_Wrapper.m_UI_UINavigation;
        public InputAction @ToggleUpgraders => m_Wrapper.m_UI_ToggleUpgraders;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @UIConfirm.started -= m_Wrapper.m_UIActionsCallbackInterface.OnUIConfirm;
                @UIConfirm.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnUIConfirm;
                @UIConfirm.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnUIConfirm;
                @UINavigation.started -= m_Wrapper.m_UIActionsCallbackInterface.OnUINavigation;
                @UINavigation.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnUINavigation;
                @UINavigation.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnUINavigation;
                @ToggleUpgraders.started -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleUpgraders;
                @ToggleUpgraders.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleUpgraders;
                @ToggleUpgraders.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleUpgraders;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UIConfirm.started += instance.OnUIConfirm;
                @UIConfirm.performed += instance.OnUIConfirm;
                @UIConfirm.canceled += instance.OnUIConfirm;
                @UINavigation.started += instance.OnUINavigation;
                @UINavigation.performed += instance.OnUINavigation;
                @UINavigation.canceled += instance.OnUINavigation;
                @ToggleUpgraders.started += instance.OnToggleUpgraders;
                @ToggleUpgraders.performed += instance.OnToggleUpgraders;
                @ToggleUpgraders.canceled += instance.OnToggleUpgraders;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IMovementActions
    {
        void OnBodyMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
    }
    public interface IGeneralActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnSwitchMode(InputAction.CallbackContext context);
        void OnToggleHUD(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnUIConfirm(InputAction.CallbackContext context);
        void OnUINavigation(InputAction.CallbackContext context);
        void OnToggleUpgraders(InputAction.CallbackContext context);
    }
}
